<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATk5OgE1NTeBNTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTbBQUFAgAAAAAAAAAABQUFAQTU1NoExMTPBNTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N4E5OToAAAAAAAAAAAAAAAAAAAAAAAAAAAE5OToBNTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTdAAAAAAAAAAAE1NTcBNTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/05OToAAAAAAAAAAAAAAAAAAAAAATU1NwE1NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/1BQUCBQUFAQTU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N4AAAAAAAAAAAAAAAAAAAAABNTU3ATU1N/01N
        Tf9MTExASkpKME1NTe9NTU3/TU1N/05OTm9QUFAQTU1N301NTf9NTU3/TExMQExMTEBNTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTa9QUFAQTU1N301NTf9NTU3/TU1N/01NTf9NTU3/AAAAAAAAAAAAAAAAAAAAAE1N
        TcBNTU3/TU1N/01NTXAAAAAASkpKME1NTe9NTU1gAAAAAEpKSjBMTEzwTU1N/01NTf9MTExATExMQE1N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N4E1NTXBMTEzwTU1N/01NTf9NTU3/TU1N/01NTf8AAAAAAAAAAAAA
        AAAAAAAATU1NwE1NTf9NTU3/TU1N/01NTWAAAAAAUFBQEAAAAABKSkowTExM8E1NTf9NTU3/TU1N/0xM
        TEBMTExATU1N/01NTf9OTk7PTU1Nv01NTb9NTU2/TU1Nv01NTb9NTU2/TU1Nv05OTs9NTU3/TU1N/wAA
        AAAAAAAAAAAAAAAAAABNTU3ATU1N/01NTf9NTU3/TU1N/1BQUCAAAAAAAAAAAE1NTeBNTU3/TU1N/01N
        Tf9NTU3/TExMQExMTEBNTU3/TU1NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1N
        Tf9NTU3/AAAAAAAAAAAAAAAAAAAAAE1NTcBNTU3/TU1N/01NTf9NTU1gAAAAAFBQUBAAAAAASkpKME1N
        Te9NTU3/TU1N/01NTf9MTExATExMQE1NTf9NTU3/TExMkE5OToBOTk6ATk5OgE5OToBOTk6ATk5OgE5O
        ToBNTU2gTU1N/01NTf8AAAAAAAAAAAAAAAAAAAAATU1NwE1NTf9NTU3/TU1NcAAAAABKSkowTExM8E1N
        TWAAAAAASkpKME1NTf9NTU3/TU1N/0xMTEBMTExATU1N/01NTf9NTU3/TU1N/01NTf9NTU3vTU1Nj01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/wAAAAAAAAAAAAAAAAAAAABNTU3ATU1N/01NTf9MTExASkpKMExM
        TPBNTU3/TU1N/01NTWAAAAAATU1N4E1NTf9NTU3/TExMQExMTEBNTU3/TU1N/01NTf9NTU3/TU1N/01N
        TaAAAAAATU1N0E1NTf9NTU3/TU1N/01NTf9NTU3/AAAAAAAAAAAAAAAAAAAAAE1NTcBNTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9QUFAgUFBQIE1NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/0xMTPBNTU3/TU1N/01NTf9NTU3/TU1N/01NTe8AAAAAAAAAAAAAAAAAAAAATk5OgE1N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/Tk5OzwAAAAAAAAAATU1N0E1N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1NoAAAAAAAAAAAAAAAAAAA
        AAAAAAAATExMkE1NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTb9KSkowAAAAAAAA
        AABKSkowTk5Oz01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTb9QUFAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAUFBQIE1NTT9NTU0/TU1NP01NTT9NTU0/TU1NP01NTT9QUFAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFAgTExMQExMTEBMTExATExMQExMTEBMTExATExMQEpK
        SjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKSkowTExMQExMTEBMTExATExMQExMTEBMTExATExMQEpK
        SjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFAQTU1NwE1NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTeBKSkowAAAAAAAAAABKSkowTU1N4E1NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTdBQUFAgAAAAAAAAAAAAAAAAAAAAAE1NTaBNTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tb9NTU3vTU1N/01NTf9NTU3/TU1N/01NTeAAAAAAAAAAAE1NTeBNTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTbAAAAAAAAAAAAAAAAAAAAAATExM8E1NTf9NTU3/TU1N/01N
        Tf9OTk7PAAAAAExMTJBNTU3/TU1N/01NTf9NTU3/TU1N/0pKSjBQUFAgTU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/wAAAAAAAAAAAAAAAAAAAABNTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTcAAAAAATk5OgE1NTf9NTU3/TU1N/01NTf9NTU3/TExMQExMTEBNTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/AAAAAAAAAAAAAAAAAAAAAE1N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1NwAAAAABOTk6ATU1N/01NTf9NTU3/TU1N/01NTf9MTExATExMQE1N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf8AAAAAAAAAAAAA
        AAAAAAAATU1N/01NTf9NTU2fTExMf0xMTH9NTU1gAAAAAExMTEBMTEx/TExMf01NTY9NTU3vTU1N/0xM
        TEBMTExATU1N/01NTe9NTU2PTExMf0xMTH9MTEx/TExMf0xMTH9MTEx/TExMf01NTY9NTU3/TU1N/wAA
        AAAAAAAAAAAAAAAAAABNTU3/TU1N/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1N
        TcBNTU3/TExMQExMTEBNTU3/TU1N0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExM
        TPBNTU3/AAAAAAAAAAAAAAAAAAAAAE1NTf9NTU3/TU1N4E1NTcBNTU3ATExMkAAAAABNTU1gTU1NwE1N
        TcBNTU3QTU1N/01NTf9MTExATExMQE1NTf9NTU3/TU1N0E1NTcBNTU3ATU1NwE1NTcBNTU3ATU1NwE1N
        TcBNTU3gTU1N/01NTf8AAAAAAAAAAAAAAAAAAAAATU1N/01NTf9NTU3/TU1N/01NTf9NTU3AAAAAAE5O
        ToBNTU3/TU1N/01NTf9NTU3/TU1N/0xMTEBMTExATU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/wAAAAAAAAAAAAAAAAAAAABNTU3/TU1N/01NTf9NTU3/TU1N/01N
        TcAAAAAATk5OgE1NTf9NTU3/TU1N/01NTf9NTU3/TExMQExMTEBNTU3/TU1N/01NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/AAAAAAAAAAAAAAAAAAAAAE1NTdBNTU3/TU1N/01N
        Tf9NTU3/TU1N4FBQUBBNTU2gTU1N/01NTf9NTU3/TU1N/01NTf9QUFAgUFBQEE1NTf9NTU3/TU1N/01N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTd8AAAAAAAAAAAAAAAAAAAAATk5OgE1N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1NvwAAAAAAAAAATU1NwE1N
        Tf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/Tk5OgAAAAAAAAAAAAAAAAAAA
        AAAAAAAATk5OgE5OTs9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/TU1N301NTZ9QUFAQAAAAAAAA
        AABQUFAQTU1Nn01NTd9NTU3/TU1N/01NTf9NTU3/TU1N/01NTf9NTU3/Tk5Oz0xMTH8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////gAYAHwAGAA8AAAAPAAAADwiAAA8FAAAPAwB/zwUAAA8Ig
        AAPAEAEDwAAAA8ABgAPgAYAD///gD/AH4A/AAYADwAGAA8CAAAPAgAADwIAAA8CAAAPP+B/zwIAAA8CA
        AAPAgAADwAAAA8ABgAPgAYAH//////////8=
</value>
  </data>
</root>